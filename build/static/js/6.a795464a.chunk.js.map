{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","label","display","flexDirection","marginBottom","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","onSubmit","e","preventDefault","authOperations","logIn","style","type","name","onChange","target"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,2HIDhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAUH,SAASC,IACtB,IAAMC,EAAWC,cADiB,EAERC,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,KAuChC,OACE,gCACE,uHAEA,uBACEC,SAba,SAAAC,GACnBA,EAAEC,iBAEFT,EAASU,IAAeC,MAAM,CAAER,QAAOE,cACxCD,EAAS,IACTE,EAAY,KASLM,MAAOpB,EAAOC,KAFhB,UAKE,wBAAOmB,MAAOpB,EAAOG,MAArB,2CAEE,uBACEkB,KAAK,QACLC,KAAK,QACL3B,MAAOgB,EACPY,SAjDc,SAAAP,GACxBJ,EAASI,EAAEQ,OAAO7B,aAoDZ,wBAAOyB,MAAOpB,EAAOG,MAArB,iDAEE,uBACEkB,KAAK,WACLC,KAAK,WACL3B,MAAOkB,EACPU,SAvDiB,SAAAP,GAC3BF,EAAYE,EAAEQ,OAAO7B,aA0Df,wBAAQ0B,KAAK,SAAb","file":"static/js/6.a795464a.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React,  { useState} from 'react';\nimport { useDispatch} from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\n// const mapDispatchToProps = {\n//   onLogin: authOperations.logIn,\nconst getToken = state => state.auth.token;\n\n// };\n\nexport default function LoginView() {\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n\n  // const handleChange = e => {\n  //   const { name, value } = e.target;\n\n  //   switch (name) {\n  //     case 'email':\n  //       setEmail(value);\n  //       break;\n      \n  //     case 'password':\n  //       setPassword(value);\n  //       break;\n      \n  //     default:\n  //       console.warn(`тип name - ${name} немає`)\n  //   }\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.logIn({ email, password }))\n   setEmail('');\n   setPassword('')\n  };\n\n    return (\n      <div>\n        <h1>Сторінка логіна</h1>\n\n        <form\n          onSubmit={handleSubmit}\n          style={styles.form}\n        //   autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Пошта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleEmailChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handlePasswordChange}\n            />\n          </label>\n\n          <button type=\"submit\">Увійти</button>\n        </form>\n      </div>\n    );\n  }\n\n\n\n"],"sourceRoot":""}