{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","label","display","flexDirection","marginBottom","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","onSubmit","e","preventDefault","authOperations","register","style","type","onChange","target"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,2HIDhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,IACtB,IAAMC,EAAWC,cADoB,EAEbC,mBAAS,IAFI,mBAE9BC,EAF8B,KAExBC,EAFwB,OAGXF,mBAAS,IAHE,mBAG9BG,EAH8B,KAGvBC,EAHuB,OAILJ,mBAAS,IAJJ,mBAI9BK,EAJ8B,KAIpBC,EAJoB,KAiDnC,OACE,gCACE,qJAEA,uBACEC,SAfa,SAAAC,GACnBA,EAAEC,iBAEFX,EAASY,IAAeC,SAAS,CAAEV,OAAME,QAAOE,cAEjDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASLM,MAAOtB,EAAOC,KAFhB,UAKE,wBAAOqB,MAAOtB,EAAOG,MAArB,gCAEE,uBACEoB,KAAK,OACLZ,KAAK,OACLhB,MAAOgB,EACPa,SA1Da,SAAAN,GACvBN,EAAQM,EAAEO,OAAO9B,aA6DX,wBAAO2B,MAAOtB,EAAOG,MAArB,2CAEE,uBACEoB,KAAK,QACLZ,KAAK,QACLhB,MAAOkB,EACPW,SAhEc,SAAAN,GACxBJ,EAASI,EAAEO,OAAO9B,aAmEZ,wBAAO2B,MAAOtB,EAAOG,MAArB,iDAEE,uBACEoB,KAAK,WACLZ,KAAK,WACLhB,MAAOoB,EACPS,SAtEiB,SAAAN,GAC3BF,EAAYE,EAAEO,OAAO9B,aAyEf,wBAAQ4B,KAAK,SAAb","file":"static/js/7.722ba854.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  // const handleChange = e => {\n  //   const { name, value } = e.target;\n\n  //   switch (name) {\n  //     case 'name':\n  //       setName(value);\n  //       break;\n      \n  //     case 'email':\n  //       setEmail(value);\n  //       break;\n      \n  //     case 'password':\n  //       setPassword(value);\n  //       break;\n      \n  //     default:\n  //       console.warn(`тип name - ${name} немає`)\n  //   }\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.register({ name, email, password }))\n    \n   setName('');\n   setEmail('');\n   setPassword('')\n  };\n\n    return (\n      <div>\n        <h1>Сторінка регістрації</h1>\n\n        <form\n          onSubmit={handleSubmit}\n          style={styles.form}\n          // autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Ім'я\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleNameChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пошта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleEmailChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handlePasswordChange}\n            />\n          </label>\n\n          <button type=\"submit\">Зареєструватися</button>\n        </form>\n      </div>\n    );\n  }\n\n\n"],"sourceRoot":""}