{"version":3,"sources":["redux/auth/auth-selectors.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","redux/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/contacts-operations.js","redux/auth/auth-actions.js","components/Container/container.js","components/Container/container.module.css","redux/contacts-actions.js"],"names":["state","auth","isAuthenticated","user","name","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","useSelector","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","dispatch","useDispatch","onLogout","useCallback","authOperations","logOut","src","defaultAvatar","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","redirectTo","children","routeProps","isLoggedIn","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","getCurrentUser","fallback","height","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","deleteContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","setError","error","combineReducers","initialUserState","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","writelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devToops","process","persistor","persistStore","ReactDOM","render","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","registerRequest","post","response","data","message","logoutRequest","contactsOperations","resetContacts","logIn","loginRequest","getState","persistedToken","getCurrentUserRequest","get","fetchContacts","addContact","contact","catch","deleteContact","contactId","delete","createAction","Container","className","s","module","exports"],"mappings":"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","file":"static/js/main.dc340133.chunk.js","sourcesContent":["const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getToken = state => state.auth.token;\n\nexport default {\n    getIsAuthenticated,\n    getUsername,\n    getToken\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#4251f5',\n  },\n};\n\nexport default function Navigation() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated)\n  \nreturn (\n      <nav>\n        <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n          Головна\n    </NavLink>\n    {isAuthenticated && <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Контакти\n    </NavLink>}\n      </nav>\n);\n  }\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React, {useCallback} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport defaultAvatar from './default-avatar.png';\nimport authOperations from 'redux/auth/auth-operations';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  \n \n  const onLogout = useCallback(() => {\n    dispatch(authOperations.logOut())}, \n    [dispatch]);\n\n  return (\n  <div style={styles.container}>\n    <img src={defaultAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n} \n\n\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#4251f5',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n     <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Реєстрація\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логін\n    </NavLink> \n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Navigation from 'components/Navigation';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport AuthNav from 'components/AuthNav';\nimport authSelectors from 'redux/auth/auth-selectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\nreturn (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n  }\n\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute ({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return(\n  <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo}/>}\n    </Route>\n  )\n  }\n\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) => {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ?\n        (<Redirect to={redirectTo} />) : (children)}</Route>)\n}\nexport default PublicRoute;\n\n\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch} from 'react-router-dom';\nimport AppBar from 'components/AppBar';\nimport Container from 'components/Container/container'; \nimport authOperations from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst HomeView = lazy(() => import('views/HomeView'));\nconst RegisterView = lazy(() => import('views/RegisterView'));\nconst LoginView = lazy(() => import('views/LoginView'));\nconst ContactsView = lazy(() => import('views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n   }, [dispatch]);\n\n\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={\n          <Loader\n                type=\"Circles\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n          />\n        }>\n        <Switch>\n\n            <PublicRoute exact path=\"/\">\n              <HomeView />\n              </PublicRoute>\n\n          <PublicRoute\n            path=\"/register\"\n            restricted\n              redirectTo=\"/contacts\">\n              <RegisterView/>\n              </PublicRoute>\n\n          <PublicRoute\n            path=\"/login\"\n            restricted\n              redirectTo=\"/contacts\">\n              <LoginView />\n               </PublicRoute>\n\n          <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\">\n            <ContactsView />\n              </PrivateRoute>\n              \n          </Switch>\n          </Suspense>\n      </Container>\n    );\n  }\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    changeFilter\n} from 'redux/contacts-actions'\n\nconst initialContacts = [];\n\nconst items = createReducer(initialContacts, {\n    [fetchContactsSuccess]: (_, {payload}) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, ...payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(({id})=> id !== payload)\n})\n\nconst loading = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]:() => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [addContactError]: setError,\n    [deleteContactError]: setError,\n    [fetchContactsError]: setError,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error\n})\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from 'redux/auth/auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, {payload}) => payload,\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [authActions.registerError]: setError,\n    [authActions.loginError]: setError,\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]: () => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false,\n})\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    error\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from 'redux/contacts-reducer';\nimport authReducer from 'redux/auth/auth-reducer';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    }\n}),\n    logger,\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    writelist: ['token']\n\n}\n\nconst store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsReducer,\n    },\n    middleware,\n    devToops: process.env.NODE_ENV==='development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store.store}>\n       <PersistGate loading={null} persistor={store.persistor}>\n     <BrowserRouter>\n    \n      <App />\n      \n        </BrowserRouter>\n        </PersistGate>\n      </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios';\nimport authActions from 'redux/auth/auth-actions';\nimport contactsOperations from 'redux/contacts-operations';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nconst register = credentials => async dispatch => {\n    dispatch(authActions.registerRequest());\n    try {\n        const response = await axios.post('/users/signup', credentials);\n         dispatch(authActions.registerSuccess(response.data));\n    }\n    catch (error) {\n        dispatch(authActions.registerError(error.message));\n    }\n   \n };\n\nconst logIn = credentials => async dispatch => {\n    dispatch(authActions.loginRequest());\n    try {\n        const response = await axios.post('/users/login', credentials);\n\n        token.set(response.data.token);\n        dispatch(authActions.loginSuccess(response.data));\n        \n    } catch (error) {\n        dispatch(authActions.loginError(error.message));\n    }\n};\n\nconst logOut = () => async dispatch => {\n    dispatch(authActions.logoutRequest());\n    try {\n        await axios.post('/users/logout');\n        token.unset();\n        dispatch(authActions.logoutSuccess());\n        dispatch(contactsOperations.resetContacts());\n        \n    } catch (error) {\n        dispatch(authActions.logoutError(error.message));\n    }\n };\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n    if (!persistedToken) {\n        return;\n    }\n    token.set(persistedToken);\n\n    dispatch(authActions.getCurrentUserRequest());\n\n    try {\n        const response = await axios.get('/users/current');\n        dispatch(authActions.getCurrentUserSuccess(response.data));\n\n    } catch (error) {\n        dispatch(authActions.getCurrentUserError(error.message));\n    }\n };\n\nexport default { register, logOut, logIn, getCurrentUser };","import axios from 'axios';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n} from 'redux/contacts-actions'\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactsError(error.message));\n    }\n}\n\nconst addContact = contact => dispatch => {\n    // console.log('okey', { name, number});\n    // const contact = {\n    //     name,\n    //     number,\n    // };\n\n    dispatch(addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) =>\n        dispatch(addContactSuccess([data]))) \n        .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error.message)));\n}\n\nconst resetContacts = () => dispatch => {\n   dispatch(fetchContactsSuccess([]))\n}\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact,\n    resetContacts\n}","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError\n}","import s from 'components/Container/container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/addContactRequest');\nexport const fetchContactsSuccess = createAction('contacts/addContactSuccess');\nexport const fetchContactsError = createAction('contacts/addContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess',\n//     (payload) => {\n//     return {\n//         payload\n//     }\n// }\n);\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess ');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n\n\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n"],"sourceRoot":""}